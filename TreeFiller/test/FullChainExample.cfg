process Rec = 
{
    untracked PSet maxEvents = {untracked int32 input = 10}
    # this example configuration offers some minimum 
    # annotation, to help users get through; please
    # don't hesitate to read through the comments
    
    
    # use MessageLogger to redirect/suppress multiple
    # service messages coming from the system
    #
    # in this config below, we use the replace option to make
    # the logger let out messages of severity ERROR (INFO level
    # will be suppressed), and we want to limit the number to 10
    #
    include "Configuration/StandardSequences/data/Services.cff"
    include "Configuration/StandardSequences/data/Geometry.cff"
    include "Configuration/StandardSequences/data/MagneticField.cff"
    include "Configuration/StandardSequences/data/FakeConditions.cff" 
    include "FWCore/MessageService/data/MessageLogger.cfi"
    
    # in you wish to quiet the logger even more and leave in 
    # only info from the Framework, use config example below :
    #
    #service = MessageLogger
    #{
    #   untracked vstring destinations = {"cout"} 
    #   untracked vstring categories = { "FwkJob" } 
    #   untracked PSet cout =
    #   {
    #      untracked PSet default = { untracked int32 limit = 0 }  # kill all messages in the log
    #      untracked PSet FwkJob  = { untracked int32 limit = -1 } # but FwkJob category - those unlimitted
    #   } 
    #}
    
    include "Configuration/StandardSequences/data/SimulationRandomNumberGeneratorSeeds.cff"
    include "SimGeneral/HepPDTESSource/data/pythiapdt.cfi"

    
  #Sample generator configuration  
  source = PythiaSource 
  { 
  untracked int32 pythiaPylistVerbosity = 1
  untracked bool pythiaHepMCVerbosity = false
  untracked int32 maxEventsToPrint = 3
  
  # put here the cross section of your process (in pb)
  untracked double crossSection = 0.00212
  # put here the efficiency of your filter (1. if no filter)
  untracked double filterEfficiency = 1.



  PSet PythiaParameters = {

    # This is a vector of ParameterSet names to be read, in this order
    vstring parameterSets = {
      "processParameters"
    }

   include "Configuration/Generator/data/PythiaUESettings.cfi"
 
       vstring processParameters = {
           "PMAS(25,1)=180.0        !mass of Higgs",
           "MSEL=0                  ! user selection for process",
#          "MSTJ(41)=1              !Switch off Pythia QED bremsshtrahlung",
           "MSUB(102)=1             !ggH",
           "MSUB(123)=1             !ZZ fusion to H",
           "MSUB(124)=1             !WW fusion to H",
           "CKIN(45)=5.             !high mass cut on m2 in 2 to 2 process Registered by Chris.Seez@cern.ch",
           "CKIN(46)=150.           !high mass cut on secondary resonance m1 in 2->1->2 process Registered by Alexandre.Nikitenko@cern.ch",
           "CKIN(47)=5.             !low mass cut on secondary resonance m2 in 2->1->2 process Registered by Alexandre.Nikitenko@cern.ch",
           "CKIN(48)=150.           !high mass cut on secondary resonance m2 in 2->1->2 process Registered by Alexandre.Nikitenko@cern.ch",
# Z decays
           "MDME(174,1)=0           !Z decay into d dbar",        
           "MDME(175,1)=0           !Z decay into u ubar",
           "MDME(176,1)=0           !Z decay into s sbar",
           "MDME(177,1)=0           !Z decay into c cbar",
           "MDME(178,1)=0           !Z decay into b bbar",
           "MDME(179,1)=0           !Z decay into t tbar",
           "MDME(182,1)=1           !Z decay into e- e+",
           "MDME(183,1)=0           !Z decay into nu_e nu_ebar",
           "MDME(184,1)=1           !Z decay into mu- mu+",
           "MDME(185,1)=0           !Z decay into nu_mu nu_mubar",
           "MDME(186,1)=1           !Z decay into tau- tau+",
           "MDME(187,1)=0           !Z decay into nu_tau nu_taubar",
# Higgs decays
           "MDME(210,1)=0           !Higgs decay into dd",
           "MDME(211,1)=0           !Higgs decay into uu",
           "MDME(212,1)=0           !Higgs decay into ss",
           "MDME(213,1)=0           !Higgs decay into cc",
           "MDME(214,1)=0           !Higgs decay into bb",
           "MDME(215,1)=0           !Higgs decay into tt",
           "MDME(216,1)=0           !Higgs decay into",
           "MDME(217,1)=0           !Higgs decay into Higgs decay",
           "MDME(218,1)=0           !Higgs decay into e nu e",
           "MDME(219,1)=0           !Higgs decay into mu nu mu",
           "MDME(220,1)=0           !Higgs decay into tau nu tau",
           "MDME(221,1)=0           !Higgs decay into Higgs decay",
           "MDME(222,1)=0           !Higgs decay into g g",
           "MDME(223,1)=0           !Higgs decay into gam gam",
           "MDME(224,1)=0           !Higgs decay into gam Z",
           "MDME(225,1)=1           !Higgs decay into Z Z",
           "MDME(226,1)=0           !Higgs decay into W W"
       }
    }
   }
    
    # load generator sequence (VtxSmeared is needed inside, missing dependence)
    include "Configuration/StandardSequences/data/VtxSmearedBetafuncEarlyCollision.cff"
    include "Configuration/StandardSequences/data/Generator.cff"
    
    # this config frament brings you 3 steps of the detector simulation:
    # -- vertex smearing (IR modeling)
    # -- G4-based hit level detector simulation
    # -- digitization (electronics readout modeling)
    # it returns 2 sequences : 
    # -- psim (vtx smearing + G4 sim)
    # -- pdigi (digitization in all subsystems, i.e. tracker=pix+sistrips,
    #           cal=ecal+ecal-0-suppression+hcal), muon=csc+dt+rpc)
    #
    include "Configuration/StandardSequences/data/Simulation.cff"
    
    # please note the IMPORTANT: 
    # in order to operate Digis, one needs to include Mixing module 
    # (pileup modeling), at least in the 0-pileup mode
    #
    # There're 3 possible configurations of the Mixing module :
    # no-pileup, low luminosity pileup, and high luminosity pileup
    #
    # they come, respectively, through the 3 config fragments below
    #
    # *each* config returns label "mix"; thus you canNOT have them
    # all together in the same configuration, but only one !!!
    #
    
    
    include "Configuration/StandardSequences/data/MixingNoPileUp.cff" 
    #include "Configuration/StandardSequences/data/MixingLowLumiPileUp.cff" 
    #include "Configuration/StandardSequences/data/MixingHighLumiPileUp.cff" 
    
    include "Configuration/StandardSequences/data/L1Emulator.cff" 

    include "Configuration/StandardSequences/data/DigiToRaw.cff"

    include "Configuration/StandardSequences/data/VtxSmearedBetafuncEarlyCollision.cff"
    
    include "Configuration/StandardSequences/data/Reconstruction.cff"
    #
    # You can set Mag Field to 0
    #
    #include "Configuration/StandardSequences/data/UseZeroBField.cff"
    
    # define the tree service
    service = TreeService { 
        untracked vstring treeNames   = { "MitTree" }
        untracked vstring fileNames   = { "mit-full" }
        untracked vstring pathNames   = { "." }
        untracked vuint32 maxSizes    = { 1024 }
        untracked vuint32 compLevels  = { 9 }
        untracked vuint32 splitLevels = { 99 }
        untracked vuint32 brSizes     = { 32000 }
    }
    
    # customize the MIT filler
    module MitGenFiller = FillGenParts {
    }
    
    module MitTrackFiller = FillTracks {
    }
    
    module MitMuonFiller = FillMuons {
    }
    
    module MitElectronFiller = FillElectrons {
    }
    
    
    # also make Edm output for the events we generate
    include "Configuration/EventContent/data/EventContent.cff"
    module FEVT = PoolOutputModule
    {
        using FEVTSIMEventContent
        untracked string fileName = "edm-full.root"
    }
    
    # output path for the Edm file
    endpath outpath = { FEVT }
    
    
    path p0 = {pgen} # generator
    path p1 = {psim} # simulation
    path p2 = {pdigi} # digitization
    path p3 = {L1Emulator}
    path p4 = {DigiToRaw}
    path p5 = {reconstruction} # reconstruction
    path p6 = { MitGenFiller, MitTrackFiller, MitMuonFiller, MitElectronFiller } #MitProd tree filler
    
    schedule = {p0,p1,p2,p3,p4,p5,p6,outpath}
    
    
}		
