# $Id: GenExample.cfg,v 1.3 2008/07/01 14:39:29 loizides Exp $

process Gen =
{
    # request 100 events, which is very fast for testing
    untracked PSet maxEvents = { untracked int32 input = 100 }

    #include "FWCore/MessageService/data/MessageLogger.cfi"
    service = MessageLogger
    {
        untracked vstring destinations =  {}
    }

    include "Configuration/StandardSequences/data/SimulationRandomNumberGeneratorSeeds.cff"
    include "SimGeneral/HepPDTESSource/data/pythiapdt.cfi"
    
    # make a minimal but valid parameter set for pythia
    source = PythiaSource 
    { 
        untracked int32  pythiaPylistVerbosity = 0
        untracked bool   pythiaHepMCVerbosity  = false
        untracked int32  maxEventsToPrint      = 0  
        untracked double filterEfficiency      = 1.
	
        PSet PythiaParameters = {
            vstring parameterSets = {
            }
        }
    }
    
    # load generator sequence (VtxSmeared is needed inside, missing dependence)
    include "Configuration/StandardSequences/data/VtxSmearedBetafuncEarlyCollision.cff"
    include "Configuration/StandardSequences/data/Generator.cff"
    
    # define the tree service
    service = TreeService { 
        untracked vstring fileNames   = { "mit-gen" }
        untracked vstring pathNames   = { "." }
        untracked vuint32 maxSizes    = { 1024 }
        untracked vuint32 compLevels  = { 9 }
        untracked vuint32 splitLevels = { 99 }
        untracked vuint32 brSizes     = { 1000 }
    }
    
    # customize the MIT filler
    module MitTreeFiller = FillMitTree {
    	untracked PSet GenParts = {
		untracked bool active = true
		untracked string mitName = "GenParticles"
		untracked string edmName = "source"
	}
	untracked PSet SimParticles = {
		untracked bool active = false
		untracked string mitName = "SimParticles"
		untracked string edmName = "mergedtruth"
		untracked string edmDataName = "MergedTrackTruth"
	}
	untracked PSet GeneralTracks = {
		untracked bool active = false
		untracked string mitName = "Tracks"
		untracked string edmName = "generalTracks"
		untracked string edmDataName= ""
		untracked string edmSimAssociationName = "trackingParticleRecoTrackAsssociation"
	}
	untracked PSet StandaloneMuonTracks = {
		untracked bool active = false
		untracked string mitName = "StandaloneMuonTracks"
		untracked string edmName = "standAloneMuons"
		untracked string edmDataName= ""
	}
	untracked PSet StandaloneMuonTracksWVtxConstraint = {
		untracked bool active = false
		untracked string mitName = "StandaloneMuonTracksWVtxConstraint"
		untracked string edmName = "standAloneMuons"
		untracked string edmDataName= "UpdatedAtVtx"
	}
	untracked PSet GlobalMuonTracks = {
		untracked bool active = false
		untracked string mitName = "GlobalMuonTracks"
		untracked string edmName = "globalMuons"
		untracked string edmDataName= ""
	}
	untracked PSet ConversionInOutTracks = {
		untracked bool active = false
		untracked string mitName = "ConversionInOutTracks"
		untracked string edmName = "ckfInOutTracksFromConversions"
		untracked string edmDataName= ""
		untracked string edmSimAssociationName = "assocInOutConversionTracks"
	}
	untracked PSet ConversionOutInTracks = {
		untracked bool active = false
		untracked string mitName = "ConversionOutInTracks"
		untracked string edmName = "ckfOutInTracksFromConversions"
		untracked string edmDataName= ""
		untracked string edmSimAssociationName = "assocOutInConversionTracks"
	}
	untracked PSet GsfTracks = {
		untracked bool active = false
		untracked string mitName = "GsfTracks"
		untracked string edmName = "pixelMatchGsfFit"
		untracked string edmDataName= ""
		untracked string edmSimAssociationName = "assoc2GsfTracks"
	}
	untracked PSet Muons = {
		untracked bool active = false
		untracked string mitName = "Muons"
		untracked string edmName = "muons"
	}
	untracked PSet Electrons = {
		untracked bool active = false
		untracked string mitName = "Electrons"
		untracked string edmName = "pixelMatchGsfElectrons"
	}
    }
  
    # standard path of action of the module
    path p0 = { pgen, MitTreeFiller } 
    
    # also make Edm output for the events we generate
    include "Configuration/EventContent/data/EventContent.cff"
    module FEVT = PoolOutputModule
    {
        using FEVTSIMEventContent
        untracked string fileName = "edm-gen.root"
    }
    
    # output path for the Edm file
    endpath outpath = { FEVT }
    
    # schedule the various path
    schedule = { p0, outpath }
}
