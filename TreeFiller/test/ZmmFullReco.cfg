# $Id: ZmmFullReco.cfg,v 1.3 2008/07/30 16:39:58 loizides Exp $

process ZmmFullReco =
{
    #-----------------------------------------------------------------------------------------------
    # Start general non-Mit specific part
    #-----------------------------------------------------------------------------------------------
    # request 10 events, which is very fast for testing
    untracked PSet maxEvents = { untracked int32 input = 10 }
    include "FWCore/MessageService/data/MessageLogger.cfi"
    # input
    source = PoolSource {
        untracked vstring fileNames = {
    "file:/server/01a/ceballos/CMSSW_2_0_7_ntuples/Zmm/10375028-DD24-DD11-8170-001617E30F4C.root",
    "file:/server/01a/ceballos/CMSSW_2_0_7_ntuples/Zmm/12CA1A34-DB24-DD11-AA5F-001D09F2426D.root",
    "file:/server/01a/ceballos/CMSSW_2_0_7_ntuples/Zmm/D6B9828D-DE24-DD11-AE72-001D09F2432B.root"
        }
    }
    # Geometry
    include "MagneticField/Engine/data/volumeBasedMagneticField.cfi"
    include "Geometry/CMSCommonData/data/cmsIdealGeometryXML.cfi"
    include "Geometry/CommonDetUnit/data/globalTrackingGeometry.cfi"
    include "Geometry/TrackerGeometryBuilder/data/trackerGeometry.cfi"
    include "Geometry/TrackerNumberingBuilder/data/trackerNumberingGeometry.cfi"
    include "RecoTracker/GeometryESProducer/data/TrackerRecoGeometryESProducer.cfi"
    # Propagator
    es_module MuonMaterialPropagator = PropagatorWithMaterialESProducer {
        string ComponentName        = "MuonMaterialPropagator"
        string PropagationDirection = "alongMomentum"
        double Mass                 = 0.105658
        double MaxDPhi              = 1.6
        bool useRungeKutta          = false
    }
    # Crap
    include "TrackingTools/KalmanUpdators/data/KFUpdatorESProducer.cfi"
    include "TrackingTools/KalmanUpdators/data/Chi2MeasurementEstimatorESProducer.cfi"
    include "RecoLocalTracker/SiStripRecHitConverter/data/StripCPEfromTrackAngle.cfi"
    include "RecoTracker/TransientTrackingRecHit/data/TransientTrackingRecHitBuilder.cfi"
    include "RecoTracker/TransientTrackingRecHit/data/TransientTrackingRecHitBuilderWithoutRefit.cfi"
    # Fitters
    es_module MuonFitterRK             = KFTrajectoryFitter from "TrackingTools/TrackFitters/data/KFTrajectoryFitterESProducer.cfi"
    replace MuonFitterRK.ComponentName = "MuonFitterRK"
    replace MuonFitterRK.Propagator    = "MuonMaterialPropagator"
    # Smoothers
    es_module MuonSmootherRK             = KFTrajectorySmoother from "TrackingTools/TrackFitters/data/KFTrajectorySmootherESProducer.cfi"
    replace MuonSmootherRK.ComponentName = "MuonSmootherRK"
    replace MuonSmootherRK.Propagator    = "MuonMaterialPropagator"
    # FittingSmoothers
    es_module MuonFittingSmootherRK               = KFFittingSmoother from "TrackingTools/TrackFitters/data/KFFittingSmootherESProducer.cfi"
    replace MuonFittingSmootherRK.ComponentName   = "MuonFittingSmootherRK"
    replace MuonFittingSmootherRK.Fitter          = "MuonFitterRK"
    replace MuonFittingSmootherRK.Smoother        = "MuonSmootherRK"
    # Setting up the track refitter
    module MuonTrackRefitter = TrackRefitter {
        string Fitter          = "MuonFittingSmootherRK"
        string Propagator      = "MuonMaterialPropagator"
        InputTag src           = generalTracks
        InputTag beamSpot      = offlineBeamSpot
        string TTRHBuilder     = "WithoutRefit"
        bool TrajectoryInEvent = false
        string constraint      = ""
        bool useHitsSplitting  = false
        string AlgorithmName   = "undefAlgorithm"
    }
    # define the sequence
    sequence Refit = { MuonTrackRefitter }

    #-----------------------------------------------------------------------------------------------
    # Start Mit driven part
    #-----------------------------------------------------------------------------------------------
    # a simple muon maker
    module MuonsStable = Stable {
        untracked string iTracks   = "MuonTrackRefitter"
        untracked int32  oPid      = 13
        untracked double oMass     = 0.105658
    }
    # a simple J/psi to Mu Mu finder
    module Jpsi2MuMu = D2SS {
        untracked string iStables1 = "MuonsStable"
        untracked string iStables2 = "MuonsStable"
        untracked int32  oPid      = 443
        untracked double oMass     = 3.09687
    }

    # include the MIT services and standard filler
    service = ObjectService {}

    service = TreeService {
        untracked vstring fileNames = { "mit-zmm-fullreco" }
    }

    include "MitProd/TreeFiller/data/MitTreeFiller.cfi"

    # setup dedicated filler 
    module FillFitResults = FillMitTree {
        untracked bool defactive = true

        untracked PSet StableParts = {
            untracked bool active = false
            untracked string mitName = "MuonsStable"
            untracked string edmName = "MuonsStable"
            untracked string trackMapName = "TracksMapName"
            untracked string basePartMap  = "MuonsStableMapName"
        }
        untracked PSet DecayParts = {
            untracked bool active = false
            untracked string mitName = "Jpsi2MuMu"
            untracked string edmName = "Jpsi2MuMu"
            untracked string basePartMap  = "MuonsStableMapName"
        }
    }

    # standard path of action of the module
    path p0 = { Refit, MuonsStable, Jpsi2MuMu, MitTreeFiller, FillFitResults }

    #-----------------------------------------------------------------------------------------------
    # Deal with the Edm type output
    #-----------------------------------------------------------------------------------------------
    # define output file, drop everything that you don't want, and keep your producer output
    module OutputModule = PoolOutputModule {
        untracked string fileName = "edm-zmm-fullreco.root"
        untracked vstring outputCommands = {
	    # keeping all for the moment
            "keep *"
        }
    }
    endpath end = { OutputModule }

    #-----------------------------------------------------------------------------------------------
    # schedule the various path
    #-----------------------------------------------------------------------------------------------
    schedule = { p0, end }
}
